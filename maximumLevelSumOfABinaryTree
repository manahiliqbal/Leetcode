/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if (root == NULL) return 0;
        queue <TreeNode*> q;
        q.push(root);
        int curLev = 1, lev = 1, curSum = 0;
        double maxSum = -INFINITY; 
        while (!q.empty()){
            curSum = 0;
            int size = q.size();
            for (int i=0; i<size; i++){
                TreeNode* cur = q.front();
                q.pop();
                curSum += cur->val;
                
                if (cur->left) q.push(cur->left);
                if (cur->right) q.push(cur->right);
            }
            if (curSum > maxSum){
                maxSum = curSum;
                lev = curLev;
            }
            curLev++;    
        }
        return lev;
    }
};
